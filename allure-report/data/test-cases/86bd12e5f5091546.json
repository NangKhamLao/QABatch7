{"uid":"86bd12e5f5091546","name":"test_add_employee","fullName":"test_PIM#test_add_employee","historyId":"85d1faee2af433dccdc475158be8a6ac","time":{"start":1756568071448,"stop":1756568087321,"duration":15873},"status":"broken","statusMessage":"selenium.common.exceptions.InvalidSelectorException: Message: invalid selector: Unable to locate an element with the xpath expression //label[text()='Driver/'s License Number']/following::div/input because of the following error:\nSyntaxError: Failed to execute 'evaluate' on 'Document': The string '//label[text()='Driver/'s License Number']/following::div/input' is not a valid XPath expression.\n  (Session info: chrome=139.0.7258.155); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#invalidselectorexception\nStacktrace:\n0   chromedriver                        0x0000000104fa8b38 cxxbridge1$str$ptr + 2722088\n1   chromedriver                        0x0000000104fa0aa8 cxxbridge1$str$ptr + 2689176\n2   chromedriver                        0x0000000104af233c cxxbridge1$string$len + 90648\n3   chromedriver                        0x0000000104af7ff0 cxxbridge1$string$len + 114380\n4   chromedriver                        0x0000000104afa334 cxxbridge1$string$len + 123408\n5   chromedriver                        0x0000000104afa3dc cxxbridge1$string$len + 123576\n6   chromedriver                        0x0000000104b39064 cxxbridge1$string$len + 380736\n7   chromedriver                        0x0000000104b7a880 cxxbridge1$string$len + 649052\n8   chromedriver                        0x0000000104b2d784 cxxbridge1$string$len + 333408\n9   chromedriver                        0x0000000104f6beb4 cxxbridge1$str$ptr + 2473124\n10  chromedriver                        0x0000000104f6f120 cxxbridge1$str$ptr + 2486032\n11  chromedriver                        0x0000000104f4d6b4 cxxbridge1$str$ptr + 2348196\n12  chromedriver                        0x0000000104f6f9dc cxxbridge1$str$ptr + 2488268\n13  chromedriver                        0x0000000104f3e730 cxxbridge1$str$ptr + 2286880\n14  chromedriver                        0x0000000104f8f5f8 cxxbridge1$str$ptr + 2618344\n15  chromedriver                        0x0000000104f8f784 cxxbridge1$str$ptr + 2618740\n16  chromedriver                        0x0000000104fa06e4 cxxbridge1$str$ptr + 2688212\n17  libsystem_pthread.dylib             0x000000018508ec0c _pthread_start + 136\n18  libsystem_pthread.dylib             0x0000000185089b80 thread_start + 8","statusTrace":"login_as_admin = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"45454081019187ccbdac8481485f4caa\")>\n\n    def test_add_employee(login_as_admin):\n        driver = login_as_admin\n        wait = WebDriverWait(driver,30)\n        pim_tab = wait.until(EC.element_to_be_clickable((By.LINK_TEXT, \"PIM\")))\n        pim_tab.click()\n    \n        add_pim = wait.until(EC.element_to_be_clickable((By.XPATH, \"//a[normalize-space()='Add Employee']\")))\n        add_pim.click()\n    \n        #firstname\n        firstname = wait.until(EC.visibility_of_element_located((By.XPATH, \"//input[@placeholder='First Name']\")))\n        firstname.send_keys(\"Ei\")\n    \n        #middlename\n        middlename = wait.until(EC.visibility_of_element_located((By.XPATH, \"//input[@placeholder='Middle Name']\")))\n        middlename.send_keys(\"Ei\")\n    \n        #lastname\n        lastname = wait.until(EC.visibility_of_element_located((By.XPATH,\"//input[@placeholder='Last Name']\")))\n        lastname.send_keys(\"Khaing\")\n    \n        '''file upload\n        1. find >>input type = file\n        2. abspath >> os.path.abspath(file location)\n        3. send_keys'''\n    \n        file_input = wait.until(EC.presence_of_element_located((By.XPATH, \"//input[@type='file']\")))\n        img_source = os.path.abspath(\"./resources/1.png\")\n        file_input.send_keys(img_source)\n    \n        #confirm file upload\n        upload_pic = wait.until(EC.presence_of_element_located((By.CLASS_NAME,\"employee-image\"))).get_attribute(\"src\")\n        assert \"/web/images/default-photo.png\" not in upload_pic, \"image upload fail\"\n    \n        toogle = wait.until(EC.element_to_be_clickable((By.XPATH, \"//span[@class='oxd-switch-input oxd-switch-input--active --label-right']\")))\n        toogle.click()\n        #username\n        wait.until(EC.presence_of_element_located((By.XPATH, \"//label[text()='Username']/following::div[1]/input\"))).send_keys(\"EiEiN\")\n    \n        #enable\n        enable = wait.until(EC.element_to_be_clickable((By.XPATH,\"//label[normalize-space()='Enabled']\")))\n        enable.click()\n        #password\n        wait.until(EC.presence_of_element_located((By.XPATH, \"//label[text()='Password']/following::div[1]/input\"))).send_keys(\"Admin123\")\n    \n        #confirm pass\n        wait.until(EC.presence_of_element_located((By.XPATH, \"//label[text()='Confirm Password']/following::div[1]/input\"))).send_keys(\"Admin123\")\n    \n        save_btn = wait.until(EC.element_to_be_clickable((By.XPATH,\"//button[@type='submit']\")))\n        save_btn.click()\n    \n        toast = wait.until(EC.presence_of_element_located((By.XPATH, \"//*[contains(.,'Successfully')]\")))\n        assert toast.is_displayed(), \"employee not added\"\n    \n        #driver license no\n>       licenseNo = wait.until(EC.presence_of_element_located((By.XPATH,\"//label[text()='Driver/'s License Number']/following::div/input\")))\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\ntest_PIM.py:64: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n.venv/lib/python3.13/site-packages/selenium/webdriver/support/wait.py:129: in until\n    value = method(self._driver)\n            ^^^^^^^^^^^^^^^^^^^^\n.venv/lib/python3.13/site-packages/selenium/webdriver/support/expected_conditions.py:104: in _predicate\n    return driver.find_element(*locator)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n.venv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:922: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n.venv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:454: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x1070aae40>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"invalid selector\",\"message\":\"invalid selector: Unable to locate an elemen...00018508ec0c _pthread_start + 136\\\\n18  libsystem_pthread.dylib             0x0000000185089b80 thread_start + 8\\\\n\"}}'}\n\n    def check_response(self, response: dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                try:\n                    value = json.loads(value_json)\n                    if isinstance(value, dict):\n                        if len(value) == 1:\n                            value = value[\"value\"]\n                        status = value.get(\"error\", None)\n                        if not status:\n                            status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                            message = value.get(\"value\") or value.get(\"message\")\n                            if not isinstance(message, str):\n                                value = message\n                                message = message.get(\"message\")\n                        else:\n                            message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.InvalidSelectorException: Message: invalid selector: Unable to locate an element with the xpath expression //label[text()='Driver/'s License Number']/following::div/input because of the following error:\nE       SyntaxError: Failed to execute 'evaluate' on 'Document': The string '//label[text()='Driver/'s License Number']/following::div/input' is not a valid XPath expression.\nE         (Session info: chrome=139.0.7258.155); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#invalidselectorexception\nE       Stacktrace:\nE       0   chromedriver                        0x0000000104fa8b38 cxxbridge1$str$ptr + 2722088\nE       1   chromedriver                        0x0000000104fa0aa8 cxxbridge1$str$ptr + 2689176\nE       2   chromedriver                        0x0000000104af233c cxxbridge1$string$len + 90648\nE       3   chromedriver                        0x0000000104af7ff0 cxxbridge1$string$len + 114380\nE       4   chromedriver                        0x0000000104afa334 cxxbridge1$string$len + 123408\nE       5   chromedriver                        0x0000000104afa3dc cxxbridge1$string$len + 123576\nE       6   chromedriver                        0x0000000104b39064 cxxbridge1$string$len + 380736\nE       7   chromedriver                        0x0000000104b7a880 cxxbridge1$string$len + 649052\nE       8   chromedriver                        0x0000000104b2d784 cxxbridge1$string$len + 333408\nE       9   chromedriver                        0x0000000104f6beb4 cxxbridge1$str$ptr + 2473124\nE       10  chromedriver                        0x0000000104f6f120 cxxbridge1$str$ptr + 2486032\nE       11  chromedriver                        0x0000000104f4d6b4 cxxbridge1$str$ptr + 2348196\nE       12  chromedriver                        0x0000000104f6f9dc cxxbridge1$str$ptr + 2488268\nE       13  chromedriver                        0x0000000104f3e730 cxxbridge1$str$ptr + 2286880\nE       14  chromedriver                        0x0000000104f8f5f8 cxxbridge1$str$ptr + 2618344\nE       15  chromedriver                        0x0000000104f8f784 cxxbridge1$str$ptr + 2618740\nE       16  chromedriver                        0x0000000104fa06e4 cxxbridge1$str$ptr + 2688212\nE       17  libsystem_pthread.dylib             0x000000018508ec0c _pthread_start + 136\nE       18  libsystem_pthread.dylib             0x0000000185089b80 thread_start + 8\n\n.venv/lib/python3.13/site-packages/selenium/webdriver/remote/errorhandler.py:232: InvalidSelectorException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"setup_teardown","time":{"start":1756568064538,"stop":1756568069495,"duration":4957},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"login_as_admin","time":{"start":1756568069495,"stop":1756568071447,"duration":1952},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup_teardown::0","time":{"start":1756568087372,"stop":1756568087372,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"suite","value":"test_PIM"},{"name":"host","value":"192.168.1.7.non-exists.ptr.local"},{"name":"thread","value":"4776-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_PIM"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"86bd12e5f5091546.json","parameterValues":[]}